# /etc/nginx/conf.d/hadoop.conf

server {
    listen       80;
    listen  [::]:80;
    server_name localhost;

    # docker DNS server
    resolver 127.0.0.11 valid=60s;

    # After the proxy service is restarted, the IP address will change.
    # Nginx uses the docker DNS server to resolve.
    set $cluster hadoop-master:8088;
    set $dfs hadoop-master:9870;
    set $jobhistory hadoop-master:19888;

    # hyperlinks
    set $hyperlinks '<li><a href="/cluster">RM Home</a> <li><a href="/dfshealth.html">HDFS</a> <li><a href="/jobhistory">Jobhistory</a>';

    # cluster
    location ~* ^/(cluster|proxy) {
        proxy_pass http://$cluster;
        proxy_redirect http://$jobhistory/jobhistory /jobhistory;

        sub_filter 'scheduler">Scheduler</a>' 'scheduler">Scheduler</a> $hyperlinks';
        sub_filter 'http://$cluster/' '/';
        sub_filter '//hadoop-worker' '/hadoop-worker';
        sub_filter_once off;
    }

    # worker
    location ~* ^/(hadoop-worker[0-9:]+)/?(.*)$ {
        proxy_pass http://$1/$2$is_args$args;
        proxy_redirect http://$1 /$1;

        sub_filter '<a href="http://$cluster">RM Home</a>' '$hyperlinks';
        sub_filter '<a href="/node' '<a href="/$1/node';
        sub_filter_once off;
    }

    # jobhistory
    location ^~ /jobhistory {
        proxy_pass http://$jobhistory;

        sub_filter 'app">Jobs</a>' 'app">Jobs</a> $hyperlinks';
        sub_filter '//hadoop-worker' '/hadoop-worker';
        sub_filter_once off;
    }

    # dfs
    location ~* ^/(dfshealth|explorer|webhdfs) {
        proxy_pass http://$dfs;
        proxy_redirect http://hadoop-worker /hadoop-worker;

        sub_filter 'Startup Progress</a></li>' 'Startup Progress</a></li> $hyperlinks';
        sub_filter '//hadoop-worker' '/hadoop-worker';
        sub_filter_types *;
    }

    # other
    location / {
        # dfs
        if ($http_referer ~* "(dfshealth.html|explorer.html|bootstrap.min.css)") {
            proxy_pass http://$dfs;
            break;
        }
        # default
        proxy_pass http://$cluster;
        proxy_redirect http://$cluster '';
    }

    # portainer
    location ^~ /portainer/ {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_pass http://portainer:9000/;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
