# /etc/nginx/conf.d/default.conf

upstream hadoop-hdfs {
    server hadoop-master:9870;
}

upstream hadoop-yarn {
    server hadoop-master:8088;
}

upstream hadoop-jobhistory {
    server hadoop-master:19888;
}

upstream hadoop-worker1 {
    server hadoop-worker1:8042;
}

upstream hadoop-worker2 {
    server hadoop-worker2:8042;
}

upstream hadoop-worker3 {
    server hadoop-worker3:8042;
}

server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location ~* /(hadoop-[0-9a-z]+)/(.*)$ {
        proxy_pass http://$1/$2$is_args$args;
        proxy_redirect http://$1 /$1;
        proxy_redirect http://hadoop-master:19888 /hadoop-jobhistory;

        gzip off;
        proxy_set_header Accept-Encoding "";

        sub_filter "http://hadoop-master:8088/" "/hadoop-yarn/";
        sub_filter "http://hadoop-master:8088" "/hadoop-yarn/";
        
        sub_filter "//hadoop-worker1:8042" "/hadoop-worker1/";
        sub_filter "//hadoop-worker2:8042" "/hadoop-worker2/";
        sub_filter "//hadoop-worker3:8042" "/hadoop-worker3/";

        # common
        sub_filter "href=\"/static/" "href=\"/$1/static/";
        sub_filter "href='/static/" "href='/$1/static/";
        sub_filter "src=\"/static/" "src=\"/$1/static/";

        sub_filter "href=\"/conf\">" "href=\"/$1/conf\">";
        sub_filter "href=\"/logs" "href=\"/$1/logs/";
        sub_filter "href=\"/stacks\">" "href=\"/$1/stacks\">";
        sub_filter "href=\"/jmx" "href=\"/$1/jmx";

        # hdfs
        sub_filter "'/startupProgress'" "'/$1/startupProgress'";
        sub_filter '/webhdfs' '/$1/webhdfs';
        sub_filter "'/conf'" "'/$1/conf'";
        sub_filter "/jmx?qry=" "/$1/jmx?qry=";
        
        # yarn
        sub_filter "href=\"/cluster" "href=\"/$1/cluster";
        sub_filter "href='/cluster" "href='/$1/cluster";
        sub_filter "href=\"/proxy/" "href=\"/$1/proxy/";
        sub_filter "href='/proxy/" "href='/$1/proxy/";
        sub_filter "src=\"/proxy/" "src=\"/$1/proxy/";

        # jobhistory
        sub_filter "href=\"/jobhistory" "href=\"/$1/jobhistory";
        sub_filter "href='/jobhistory" "href='/$1/jobhistory";

        # node
        sub_filter "href=\"/node" "href=\"/$1/node";
        
        sub_filter_types *;
        sub_filter_once off;
    }

    location /portainer/ {
        proxy_pass http://portainer:9000;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_redirect http://portainer:9000 /portainer;
        rewrite ^/portainer/(.*)$ /$1 break;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

